# Generated by Django 5.1.3 on 2025-08-21 11:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0004_cabinetmaterial_cabinettype_doormaterial_shuttertype_and_more'),
        ('customers', '0008_remove_customer_kitchen_kitchentype'),
    ]

    operations = [
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('quotation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quotation_number', models.CharField(max_length=50, unique=True)),
                ('kitchen_type', models.CharField(choices=[('open', 'Open Kitchen'), ('working', 'Working Kitchen'), ('both', 'Open + Working Kitchen')], default='open', max_length=20)),
                ('kitchen_shape', models.CharField(blank=True, max_length=100)),
                ('carcass_material_text', models.CharField(default='Thomson WPC with Merino Inner Lamination', max_length=200)),
                ('shutter_material_text', models.CharField(default='Thomson WPC with Merino Luvih Lamination', max_length=200)),
                ('handle_type', models.CharField(default='Gola Profile Handles - Black Colour', max_length=200)),
                ('hardware_brand', models.CharField(default='Blum', max_length=100)),
                ('countertop_info', models.CharField(default='Client Scope', max_length=200)),
                ('appliances_info', models.CharField(default='Client Scope', max_length=200)),
                ('accessories_brand', models.CharField(default='Hettich', max_length=100)),
                ('light_brand', models.CharField(default='Philips', max_length=100)),
                ('color_status', models.CharField(default='Not confirmed', max_length=100)),
                ('scope_of_work', models.TextField(default='Design, Electrical Plumbing Drawing, transportation, and installation of a fully customized modular kitchen including base cabinets, wall cabinets, tall units, and associated accessories and lights.')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('gst_percentage', models.DecimalField(decimal_places=2, default=18.0, max_digits=5)),
                ('gst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('offer_value', models.DecimalField(decimal_places=2, default=0, help_text='Special offer price if applicable', max_digits=12)),
                ('final_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('validity_days', models.IntegerField(default=30)),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('important_note', models.TextField(default='THIS QUOTE IS ONLY FOR THE ITEMS MENTIONED IN THIS OFFER. ANY OTHER ITEMS OR APPLIANCES LIKE HOB, HOOD, FRIDGE, OVEN ETC ARE EXCLUDED FROM THIS QUOTE. THE QUOTE FOR THOSE ITEMS ARE GIVEN SEPARATELY. VALIDITY OF THIS QUOTE IS ONLY FOR 30 DAYS. THERE WILL BE REVISION OF PRICES IN EVERY 30 DAYS AS PER MARKET COST FLUCTUATIONS.')),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('payment_terms', models.TextField(default='60% advance upon confirmation.\n30% on delivery of materials.\n10% on final installation completion.')),
                ('warranty_info', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('carcass_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quotations_carcass', to='catalog.cabinetmaterial')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotations', to='customers.customer')),
                ('shutter_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quotations_shutter', to='catalog.doormaterial')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OpenKitchenSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('open', 'Open Kitchen'), ('working', 'Working Kitchen')], max_length=20)),
                ('wpc_cabinets_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='WPC Cabinets Cost')),
                ('door_finish_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Luvih Laminate Finished WPC Doors')),
                ('hardware_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Hardware (BLUM)')),
                ('accessories_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Accessories Cost')),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('offer_value', models.DecimalField(decimal_places=2, default=0, help_text='Special offer price for this section', max_digits=10)),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='open_kitchen_sections', to='catalog.quotation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuotationAccessory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kitchen_section', models.CharField(choices=[('open', 'Open Kitchen'), ('working', 'Working Kitchen')], default='open', max_length=20)),
                ('art_number', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('brand', models.CharField(default='Hettich', max_length=100)),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sort_order', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='quotation_accessories/')),
                ('product_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.productvariant')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accessories', to='catalog.quotation')),
            ],
            options={
                'ordering': ['kitchen_section', 'sort_order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='QuotationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kitchen_section', models.CharField(choices=[('open', 'Open Kitchen'), ('working', 'Working Kitchen')], default='open', max_length=20)),
                ('cabinet_type_text', models.CharField(blank=True, max_length=200)),
                ('width', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('std_depth', models.IntegerField(default=600, validators=[django.core.validators.MinValueValidator(1)])),
                ('height', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('special_accessories', models.CharField(default='NO SPECIAL ACCESSORIES', max_length=200)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sort_order', models.IntegerField(default=0)),
                ('cabinet_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.cabinettype')),
                ('product_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.productvariant')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='catalog.quotation')),
            ],
            options={
                'ordering': ['kitchen_section', 'sort_order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='QuotationPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(choices=[('plan_open', 'Plan - Open Kitchen'), ('plan_working', 'Plan - Working Kitchen & Storage'), ('elevation_a', 'Elevation A'), ('elevation_b', 'Elevation B'), ('elevation_c', 'Elevation C'), ('storage_unit', 'Storage Unit'), ('3d_view', '3D View')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='quotation_plans/')),
                ('description', models.TextField(blank=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='catalog.quotation')),
            ],
            options={
                'ordering': ['sort_order', 'plan_type'],
            },
        ),
        migrations.CreateModel(
            name='QuotationSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_kitchen_mrp', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('open_kitchen_offer', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('working_kitchen_mrp', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('working_kitchen_offer', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('accessories_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('quotation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='catalog.quotation')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=50)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline', to='catalog.quotation')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='WorkingKitchenSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('open', 'Open Kitchen'), ('working', 'Working Kitchen')], max_length=20)),
                ('wpc_cabinets_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='WPC Cabinets Cost')),
                ('door_finish_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Luvih Laminate Finished WPC Doors')),
                ('hardware_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Hardware (BLUM)')),
                ('accessories_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Accessories Cost')),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('offer_value', models.DecimalField(decimal_places=2, default=0, help_text='Special offer price for this section', max_digits=10)),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_kitchen_sections', to='catalog.quotation')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
